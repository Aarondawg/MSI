(*
Setup
=====

The Setup file includes all the files that MSI uses throughout the include, plus
the necessary setup procedures called when the script starts.

The source for can be found
`here <https://github.com/SRL/MSI/raw/master/MSI/Core/Setup.simba>`_.

*)

///SRL Includes
{$DEFINE SMART}

{$IFDEF DEBUG_REFLECTION}
  {$DEFINE REFLECTION_MEMORY_DEBUG}
  {$i reflection_management.simba}
{$ENDIF}

{$i srl/srl.scar}
{$i reflection/reflection.simba}

{$IFDEF SPS}
  {$i srl/srl/core/SPS/SPS.simba}
{$ENDIF}

{$i srl/srl/misc/Reports.scar}
{$i srl/srl/misc/PaintSmart.scar}
{$i srl/srl/misc/Stats.simba}

{$i srl/srl/skill/magic.scar}

//MSI Script
{$i MSI/MSI/Core/Globals.simba}
{$i MSI/MSI/Core/Debug.simba}
{$i MSI/MSI/Core/Extras.simba}
{$i MSI/MSI/Core/Manipulation.simba}
{$i MSI/MSI/Core/Track.simba}
{$i MSI/MSI/Core/Antiban.simba}
{$i MSI/MSI/Core/Animating.simba}
{$i MSI/MSI/Core/Objects.simba}
{$i MSI/MSI/Core/Items.simba}
{$i MSI/MSI/Core/Obstacles.simba}
{$i MSI/MSI/Core/Walking.simba}
{$i MSI/MSI/Core/Materials.simba}
{$i MSI/MSI/Core/Locations.simba}

{$i MSI/MSI/Core/Skills.simba}
{$i MSI/MSI/Core/Banking.simba}

//MSI Skill Files
{$i MSI/MSI/Skills/Woodcutting.simba}
{$i MSI/MSI/Skills/Mining.simba}
{$i MSI/MSI/Skills/Fishing.simba}
{$i MSI/MSI/Skills/Cooking.simba}
{$i MSI/MSI/Skills/Magic.simba}
{$i MSI/MSI/Skills/Money_Making.simba}

{$i MSI/MSI/Core/Reports.simba}
{$i MSI/MSI/Core/Scripts.simba}

//Extras
{$IFDEF EXTRA_EXAMPLE}
  {$i MSI/MSI/Extras/Example.simba}
{$ENDIF}

{$IFDEF EXTRA_CHARACTER_STATS}
  {$i MSI/MSI/Extras/CharacterStats.simba}
{$ENDIF}

//MSI Skill Loops, AI and Mainloop
{$i MSI/MSI/Core/MainLoop.simba}
{$i MSI/MSI/Form/Form.simba}

(*
MSI_Setup
~~~~~~~~~

.. code-block:: pascal

  procedure MSI_Setup();

Sets up MSI by loading all the global arrays used throughout the include.

.. note::

  | Author: Coh3n
  | Last Updated: 27 February 2010 by Coh3n

Example:

.. code-block:: pascal

  MSI_Setup();
*)
procedure MSI_Setup();
var
  Timer: integer;
begin
  MarkTime(Timer);

  MSI_LoadAllLocations;
  MSI_LoadAllScripts;
  MSI_LoadAllItems;
  MSI_LoadAllObstacles;
  MSI_LoadAllSpells;
  MSI_LoadAllExtras;
  Track_LoadNames;

  Writeln('Setting up MSI took '+IntToStr(TimeFromMark(Timer))+' ms.');
end;

(*
MSI_SetupReflection
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_SetupReflection;

MSI's custom reflection setup procedure.  This is used so that MSI will continue
if it finds that the reflection hooks are outdated.  Will warn the user before
continuing with color-only.

.. note::

  | Author: Coh3n
  | Last Updated: 04 May 2011 by Coh3n

Example:

.. code-block:: pascal

  MSI_SetupReflection();
*)
procedure MSI_SetupReflection();
begin
  {$IFDEF REFLECTION}
  R_UpdateKill := false;
  SetupReflection;
  if (SmartGetFieldInt(0, hook_static_LoginIndex) = -1) then
  begin
    ReflectionBroken := True;
    {$IFDEF SPS}
    ShowMessage('HOOKS ARE OUTDATED: '+#13+#10+
                '  This means you will be using 100% color.  Please '+#13+#10+
                '  terminate the script if you would rather wait for '+#13+#10+
                '  reflection to be updated.'
    );
    {$ELSE}
    ShowMessage('HOOKS ARE OUTDATED & SPS ISN''T DEFINED: '+#13+#10+
                '  This means that there are no walking methods available '+#13+#10+
                '  to you.  Either wait for Reflection to be updated or '+#13+#10+
                '  define SPS at the top of RunMe.simba.'
    );
    TerminateScript;
    {$ENDIF}
  end;
  {$ELSE}
  ReflectionBroken := True; // If it's not being used, it's broken (for script's sake)
  {$ENDIF}
end;

